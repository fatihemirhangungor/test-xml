using System;
using System.IO;
using DocumentFormat.OpenXml;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;

public class ExcelReader
{
    public static void Main(string[] args)
    {
        string filePath = @"path/to/your/excel/file.xlsx"; // Replace with the actual file path

        try
        {
            using (SpreadsheetDocument spreadsheetDocument = SpreadsheetDocument.Open(filePath, false))
            {
                WorkbookPart workbookPart = spreadsheetDocument.WorkbookPart;
                WorksheetPart worksheetPart = workbookPart.WorksheetParts.First();
                SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();

                foreach (Row row in sheetData.Elements<Row>())
                {
                    foreach (Cell cell in row.Elements<Cell>())
                    {
                        string cellValue = GetCellValue(spreadsheetDocument, cell);
                        Console.Write(cellValue + " ");
                    }
                    Console.WriteLine();
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error reading Excel file: " + ex.Message);
        }
    }

    private static string GetCellValue(SpreadsheetDocument document, Cell cell)
    {
        string value = cell.InnerText;

        // If the cell represents an integer data type, display the integer value. 
        if (cell.DataType != null && cell.DataType == CellValues.Number)
        {
            double doubleValue = double.Parse(value);
            value = Convert.ToInt32(doubleValue).ToString();
        }

        // If the cell represents dates, display the formatted date. 
        else if (cell.DataType != null && cell.DataType == CellValues.Date)
        {
            DateTime dateTime = DateTime.FromOADate(double.Parse(value));
            value = dateTime.ToShortDateString();
        }

        return value;
    }
}
