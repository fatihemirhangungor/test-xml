using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;
using System;
using System.Collections.Generic;

class Program
{
    static void Main(string[] args)
    {
        string filePath = "PathToYourExcelFile.xlsx";

        try
        {
            var data = ReadExcelFile(filePath);
            Console.WriteLine("Excel Data:");
            foreach (var row in data)
            {
                Console.WriteLine(string.Join(", ", row));
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    public static List<List<string>> ReadExcelFile(string filePath)
    {
        var result = new List<List<string>>();

        using (SpreadsheetDocument doc = SpreadsheetDocument.Open(filePath, false))
        {
            WorkbookPart workbookPart = doc.WorkbookPart;
            Sheet firstSheet = workbookPart.Workbook.Sheets.GetFirstChild<Sheet>();
            WorksheetPart worksheetPart = (WorksheetPart)workbookPart.GetPartById(firstSheet.Id);
            SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();

            foreach (Row row in sheetData.Elements<Row>())
            {
                var rowData = new List<string>();
                foreach (Cell cell in row.Elements<Cell>())
                {
                    rowData.Add(GetCellValue(workbookPart, cell));
                }
                result.Add(rowData);
            }
        }

        return result;
    }

    private static string GetCellValue(WorkbookPart workbookPart, Cell cell)
    {
        if (cell == null || cell.CellValue == null) return string.Empty;

        string value = cell.CellValue.Text;

        // Check if the value is a shared string
        if (cell.DataType != null && cell.DataType.Value == CellValues.SharedString)
        {
            return workbookPart.SharedStringTablePart.SharedStringTable
                .ChildElements[int.Parse(value)].InnerText;
        }

        return value;
    }
}
