using System;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Spreadsheet;

class Program
{
    static void Main(string[] args)
    {
        string filePath = "path_to_your_excel_file.xlsx";
        using (SpreadsheetDocument document = SpreadsheetDocument.Open(filePath, false))
        {
            WorkbookPart workbookPart = document.WorkbookPart;
            Sheet sheet = workbookPart.Workbook.Sheets.GetFirstChild<Sheet>();
            WorksheetPart worksheetPart = (WorksheetPart)(workbookPart.GetPartById(sheet.Id));
            SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();
            
            foreach (Row row in sheetData.Elements<Row>())
            {
                foreach (Cell cell in row.Elements<Cell>())
                {
                    string cellValue = GetCellValue(cell, workbookPart);
                    Console.Write(cellValue + "\t");
                }
                Console.WriteLine();
            }
        }
    }

    static string GetCellValue(Cell cell, WorkbookPart workbookPart)
    {
        string value = cell.CellValue?.InnerText;
        if (cell.DataType != null && cell.DataType.Value == CellValues.SharedString)
        {
            return workbookPart.SharedStringTablePart.SharedStringTable.ChildElements[int.Parse(value)].InnerText;
        }
        return value;
    }

    static string GetCellValue(Cell cell, WorkbookPart workbookPart)
    {
        string value = cell.CellValue?.InnerText;
        if (cell.DataType != null && cell.DataType.Value == CellValues.SharedString)
        {
            return workbookPart.SharedStringTablePart.SharedStringTable.ChildElements[int.Parse(value)].InnerText;
        }
    
        if (decimal.TryParse(value, out decimal decimalValue))
        {
            // Round the value to 3 decimal places
            decimalValue = Math.Round(decimalValue, 3);
            return decimalValue.ToString();
        }
        
        return value;
    }
************************************************************

    public DataTable ReadExcelToDataTable(string filePath)
{
    DataTable dataTable = new DataTable();

    using (SpreadsheetDocument document = SpreadsheetDocument.Open(filePath, false))
    {
        WorkbookPart workbookPart = document.WorkbookPart;
        Sheet sheet = workbookPart.Workbook.Sheets.GetFirstChild<Sheet>();
        WorksheetPart worksheetPart = (WorksheetPart)(workbookPart.GetPartById(sheet.Id));
        SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();

        // Create columns
        Row headerRow = sheetData.Elements<Row>().FirstOrDefault();
        foreach (Cell headerCell in headerRow.Elements<Cell>())
        {
            dataTable.Columns.Add(GetCellValue(headerCell, workbookPart));
        }

        // Create rows
        foreach (Row row in sheetData.Elements<Row>().Skip(1))
        {
            DataRow dataRow = dataTable.NewRow();
            int columnIndex = 0;
            foreach (Cell cell in row.Elements<Cell>())
            {
                dataRow[columnIndex] = GetCellValue(cell, workbookPart);
                columnIndex++;
            }
            dataTable.Rows.Add(dataRow);
        }
    }

    return dataTable;
}

static string GetCellValue(Cell cell, WorkbookPart workbookPart)
{
    string value = cell.CellValue?.InnerText;
    if (cell.DataType != null && cell.DataType.Value == CellValues.SharedString)
    {
        return workbookPart.SharedStringTablePart.SharedStringTable.ChildElements[int.Parse(value)].InnerText;
    }

    if (decimal.TryParse(value, out decimal decimalValue))
    {
        // Format the value to two decimal places with comma as decimal separator
        return decimalValue.ToString("N2", new CultureInfo("tr-TR"));
    }

    return value;
}

}
