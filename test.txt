private static string GetCellValue(WorkbookPart workbookPart, Cell cell)
{
    if (cell == null) return string.Empty;

    string value = cell.CellValue?.Text ?? string.Empty;

    // If the cell is a shared string, retrieve the value from the shared string table
    if (cell.DataType != null && cell.DataType.Value == CellValues.SharedString)
    {
        return workbookPart.SharedStringTablePart.SharedStringTable
            .ChildElements[int.Parse(value)].InnerText;
    }

    // If the cell is numeric, format it based on its style
    if (cell.DataType == null && double.TryParse(value, out double numericValue))
    {
        return GetFormattedCellValue(workbookPart, cell, numericValue);
    }

    return value;
}

private static string GetFormattedCellValue(WorkbookPart workbookPart, Cell cell, double numericValue)
{
    if (cell.StyleIndex == null) return numericValue.ToString(); // No specific style applied

    Stylesheet stylesheet = workbookPart.WorkbookStylesPart.Stylesheet;
    CellFormat cellFormat = (CellFormat)stylesheet.CellFormats
        .ElementAt((int)cell.StyleIndex.Value);

    if (cellFormat.NumberFormatId != null)
    {
        uint numberFormatId = cellFormat.NumberFormatId.Value;

        // Handle common number formats (e.g., currency, comma-separated numbers, etc.)
        if (numberFormatId == 4) // Number with two decimals
            return numericValue.ToString("0.00");
        if (numberFormatId == 44) // Number with commas and two decimals
            return numericValue.ToString("#,##0.00");
    }

    return numericValue.ToString(); // Default if no specific number format is detected
}
