private string GetCellValue(Cell cell, WorkbookPart workbookPart)
{
    if (cell == null || cell.CellValue == null)
        return null;

    string value = cell.CellValue.InnerText;

    // Check if the cell contains a shared string
    if (cell.DataType != null && cell.DataType.Value == CellValues.SharedString)
    {
        return workbookPart.SharedStringTablePart.SharedStringTable
            .ElementAt(int.Parse(value)).InnerText;
    }

    // Handle numbers and apply formatting if necessary
    if (cell.DataType == null)
    {
        // Get cell format index
        uint styleIndex = cell.StyleIndex != null ? cell.StyleIndex.Value : 0;
        CellFormat cellFormat = workbookPart.WorkbookStylesPart.Stylesheet.CellFormats
            .ChildElements[(int)styleIndex] as CellFormat;

        if (cellFormat != null)
        {
            // Get the number format ID
            uint numberFormatId = cellFormat.NumberFormatId != null
                ? cellFormat.NumberFormatId.Value
                : 0;

            // Retrieve raw numeric value
            if (double.TryParse(value, out double rawNumericValue))
            {
                // Apply formatting based on the number format ID
                return ApplyNumberFormat(rawNumericValue, numberFormatId);
            }
        }
    }

    return value;
}

private string ApplyNumberFormat(double value, uint formatId)
{
    // Common Excel formats
    switch (formatId)
    {
        case 2: // "#,##0.00"
            return value.ToString("N2");
        case 3: // "#,##0"
            return value.ToString("N0");
        case 4: // "$#,##0.00"
            return value.ToString("C2");
        case 9: // "0%"
            return (value * 100).ToString("0.##") + "%";
        default:
            return value.ToString(); // Default raw value
    }
}
