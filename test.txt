private static string GetCellValue(WorkbookPart workbookPart, Cell cell)
{
    if (cell == null) return string.Empty;

    string value = cell.CellValue?.Text ?? string.Empty;

    // If the cell is a shared string, retrieve the value from the shared string table
    if (cell.DataType != null && cell.DataType.Value == CellValues.SharedString)
    {
        return workbookPart.SharedStringTablePart.SharedStringTable
            .ChildElements[int.Parse(value)].InnerText;
    }

    // If the cell is numeric, format it based on its style
    if (cell.DataType == null && double.TryParse(value, out double numericValue))
    {
        return GetFormattedCellValue(workbookPart, cell, numericValue);
    }

    return value;
}

private static string GetFormattedCellValue(WorkbookPart workbookPart, Cell cell, double numericValue)
{
    if (cell.StyleIndex == null) return numericValue.ToString(); // No specific style applied

    Stylesheet stylesheet = workbookPart.WorkbookStylesPart.Stylesheet;
    CellFormat cellFormat = (CellFormat)stylesheet.CellFormats
        .ElementAt((int)cell.StyleIndex.Value);

    uint numberFormatId = cellFormat.NumberFormatId?.Value ?? 0;

    // Handle standard number formats
    return ApplyNumberFormat(numberFormatId, numericValue);
}

private static string ApplyNumberFormat(uint numberFormatId, double numericValue)
{
    return numberFormatId switch
    {
        1 => numericValue.ToString("0"),                // Integer
        2 => numericValue.ToString("0.00"),            // Decimal with 2 places
        3 => numericValue.ToString("#,##0"),           // Comma-separated integer
        4 => numericValue.ToString("#,##0.00"),        // Comma-separated with 2 decimals
        44 => numericValue.ToString("#,##0.00"),       // Custom number format
        _ => numericValue.ToString("G"),               // General format (fallback)
    };
}
