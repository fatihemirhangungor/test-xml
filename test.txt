using System;
using System.Data;
using System.IO;
using NPOI.SS.UserModel;
using NPOI.XSSF.UserModel; // For .xlsx files
using NPOI.HSSF.UserModel; // For .xls files

public class ExcelReader
{
    public static DataTable ReadExcelToDataTable(string filePath)
    {
        if (string.IsNullOrEmpty(filePath) || !File.Exists(filePath))
            throw new FileNotFoundException("The specified file does not exist.");

        IWorkbook workbook;

        // Determine file type
        using (var fileStream = new FileStream(filePath, FileMode.Open, FileAccess.Read))
        {
            if (Path.GetExtension(filePath).Equals(".xlsx", StringComparison.OrdinalIgnoreCase))
            {
                workbook = new XSSFWorkbook(fileStream); // For .xlsx files
            }
            else if (Path.GetExtension(filePath).Equals(".xls", StringComparison.OrdinalIgnoreCase))
            {
                workbook = new HSSFWorkbook(fileStream); // For .xls files
            }
            else
            {
                throw new NotSupportedException("The specified file format is not supported.");
            }
        }

        var sheet = workbook.GetSheetAt(0); // Get the first sheet
        var dataTable = new DataTable();

        // Read header row (assuming the first row contains column names)
        var headerRow = sheet.GetRow(0);
        for (int col = 0; col < headerRow.LastCellNum; col++)
        {
            var columnName = headerRow.GetCell(col)?.ToString() ?? $"Column{col + 1}";
            dataTable.Columns.Add(columnName);
        }

        // Read the rest of the rows
        for (int row = 1; row <= sheet.LastRowNum; row++) // Start from the second row
        {
            var excelRow = sheet.GetRow(row);
            if (excelRow == null) continue; // Skip empty rows

            var dataRow = dataTable.NewRow();
            for (int col = 0; col < excelRow.LastCellNum; col++)
            {
                var cell = excelRow.GetCell(col);
                dataRow[col] = cell?.ToString() ?? string.Empty; // Handle null cells
            }
            dataTable.Rows.Add(dataRow);
        }

        return dataTable;
    }
}

Kısa bir süre birlikte çalışma şansı bulduk, ama bu süre zarfında bile liderliğinizin ve rehberliğinizin ekibimiz üzerinde ne kadar etkili olduğunu gördüm. Sakin ve çözüm odaklı yaklaşımınızla birçok konuda ilham oldunuz. Emeklilik hayatınızda mutluluklar dilerim!
